<?php

namespace ContainerV7WcOwq;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_8ZOvcXuService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.8ZOvcXu' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.8ZOvcXu'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Controller\\BookController::addBook' => ['privates', '.service_locator.gxkSA7l', 'get_ServiceLocator_GxkSA7lService', true],
            'App\\Controller\\BookController::deleteBook' => ['privates', '.service_locator.OKM9Lf6', 'get_ServiceLocator_OKM9Lf6Service', true],
            'App\\Controller\\BookController::getAuthorsByBookId' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController::getBookById' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController::getBooks' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController::getGenresByBookId' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController::getReviewsByBookId' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController::searchBooks' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController::updateBook' => ['privates', '.service_locator.XWnZ26H', 'get_ServiceLocator_XWnZ26HService', true],
            'App\\Controller\\GenreController::addGenre' => ['privates', '.service_locator.gxkSA7l', 'get_ServiceLocator_GxkSA7lService', true],
            'App\\Controller\\GenreController::deleteGenre' => ['privates', '.service_locator.SCil6jr', 'get_ServiceLocator_SCil6jrService', true],
            'App\\Controller\\GenreController::getAllGenres' => ['privates', '.service_locator.LHZBpiL', 'get_ServiceLocator_LHZBpiLService', true],
            'App\\Controller\\GenreController::getBooksByGenreId' => ['privates', '.service_locator.LHZBpiL', 'get_ServiceLocator_LHZBpiLService', true],
            'App\\Controller\\GenreController::getGenreById' => ['privates', '.service_locator.LHZBpiL', 'get_ServiceLocator_LHZBpiLService', true],
            'App\\Controller\\GenreController::updateGenre' => ['privates', '.service_locator.ZS8flUt', 'get_ServiceLocator_ZS8flUtService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Controller\\BookController:addBook' => ['privates', '.service_locator.gxkSA7l', 'get_ServiceLocator_GxkSA7lService', true],
            'App\\Controller\\BookController:deleteBook' => ['privates', '.service_locator.OKM9Lf6', 'get_ServiceLocator_OKM9Lf6Service', true],
            'App\\Controller\\BookController:getAuthorsByBookId' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController:getBookById' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController:getBooks' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController:getGenresByBookId' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController:getReviewsByBookId' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController:searchBooks' => ['privates', '.service_locator.E86grY4', 'get_ServiceLocator_E86grY4Service', true],
            'App\\Controller\\BookController:updateBook' => ['privates', '.service_locator.XWnZ26H', 'get_ServiceLocator_XWnZ26HService', true],
            'App\\Controller\\GenreController:addGenre' => ['privates', '.service_locator.gxkSA7l', 'get_ServiceLocator_GxkSA7lService', true],
            'App\\Controller\\GenreController:deleteGenre' => ['privates', '.service_locator.SCil6jr', 'get_ServiceLocator_SCil6jrService', true],
            'App\\Controller\\GenreController:getAllGenres' => ['privates', '.service_locator.LHZBpiL', 'get_ServiceLocator_LHZBpiLService', true],
            'App\\Controller\\GenreController:getBooksByGenreId' => ['privates', '.service_locator.LHZBpiL', 'get_ServiceLocator_LHZBpiLService', true],
            'App\\Controller\\GenreController:getGenreById' => ['privates', '.service_locator.LHZBpiL', 'get_ServiceLocator_LHZBpiLService', true],
            'App\\Controller\\GenreController:updateGenre' => ['privates', '.service_locator.ZS8flUt', 'get_ServiceLocator_ZS8flUtService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
        ], [
            'App\\Controller\\BookController::addBook' => '?',
            'App\\Controller\\BookController::deleteBook' => '?',
            'App\\Controller\\BookController::getAuthorsByBookId' => '?',
            'App\\Controller\\BookController::getBookById' => '?',
            'App\\Controller\\BookController::getBooks' => '?',
            'App\\Controller\\BookController::getGenresByBookId' => '?',
            'App\\Controller\\BookController::getReviewsByBookId' => '?',
            'App\\Controller\\BookController::searchBooks' => '?',
            'App\\Controller\\BookController::updateBook' => '?',
            'App\\Controller\\GenreController::addGenre' => '?',
            'App\\Controller\\GenreController::deleteGenre' => '?',
            'App\\Controller\\GenreController::getAllGenres' => '?',
            'App\\Controller\\GenreController::getBooksByGenreId' => '?',
            'App\\Controller\\GenreController::getGenreById' => '?',
            'App\\Controller\\GenreController::updateGenre' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\BookController:addBook' => '?',
            'App\\Controller\\BookController:deleteBook' => '?',
            'App\\Controller\\BookController:getAuthorsByBookId' => '?',
            'App\\Controller\\BookController:getBookById' => '?',
            'App\\Controller\\BookController:getBooks' => '?',
            'App\\Controller\\BookController:getGenresByBookId' => '?',
            'App\\Controller\\BookController:getReviewsByBookId' => '?',
            'App\\Controller\\BookController:searchBooks' => '?',
            'App\\Controller\\BookController:updateBook' => '?',
            'App\\Controller\\GenreController:addGenre' => '?',
            'App\\Controller\\GenreController:deleteGenre' => '?',
            'App\\Controller\\GenreController:getAllGenres' => '?',
            'App\\Controller\\GenreController:getBooksByGenreId' => '?',
            'App\\Controller\\GenreController:getGenreById' => '?',
            'App\\Controller\\GenreController:updateGenre' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
